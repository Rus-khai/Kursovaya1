import pandas
import pytest

from src.views import file_path


# @pytest.fixture
def get_data():
    transactions = [
        {
            "Дата операции": "10.01.2018 13:00:04",
            "Дата платежа": "10.01.2018",
            "Номер карты": None,
            "Статус": "OK",
            "Сумма операции": 30000.0,
            "Валюта операции": "RUB",
            "Сумма платежа": 30000.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Пополнения",
            "MCC": 6012.0,
            "Описание": "Перевод с карты",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 30000.0
        },
        {
            "Дата операции": "10.01.2018 12:59:23",
            "Дата платежа": "10.01.2018",
            "Номер карты": None,
            "Статус": "OK",
            "Сумма операции": 30000.0,
            "Валюта операции": "RUB",
            "Сумма платежа": 30000.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Пополнения",
            "MCC": 6012.0,
            "Описание": "Перевод с карты",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 30000.0
        },
        {
            "Дата операции": "10.01.2018 12:43:34",
            "Дата платежа": "10.01.2018",
            "Номер карты": "*5441",
            "Статус": "FAILED",
            "Сумма операции": -30068.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -30068.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": None,
            "MCC": None,
            "Описание": "Перевод с карты",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 30068.0
        },
        {
            "Дата операции": "10.01.2018 12:42:44",
            "Дата платежа": "10.01.2018",
            "Номер карты": "*5441",
            "Статус": "FAILED",
            "Сумма операции": -40068.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -40068.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": None,
            "MCC": None,
            "Описание": "Перевод с карты",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 40068.0
        },
        {
            "Дата операции": "10.01.2018 12:41:24",
            "Дата платежа": "10.01.2018",
            "Номер карты": "*5441",
            "Статус": "FAILED",
            "Сумма операции": -87068.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -87068.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": None,
            "MCC": None,
            "Описание": "Перевод с карты",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 87068.0
        },
        {
            "Дата операции": "08.01.2018 21:29:43",
            "Дата платежа": "10.01.2018",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -364.49,
            "Валюта операции": "RUB",
            "Сумма платежа": -364.49,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Супермаркеты",
            "MCC": 5411.0,
            "Описание": "Дикси",
            "Бонусы (включая кэшбэк)": 7,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 364.49
        },
        {
            "Дата операции": "08.01.2018 14:21:23",
            "Дата платежа": "10.01.2018",
            "Номер карты": "*4556",
            "Статус": "OK",
            "Сумма операции": -250.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -250.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Связь",
            "MCC": 4814.0,
            "Описание": "МТС",
            "Бонусы (включая кэшбэк)": 0,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 250.0
        },
        {
            "Дата операции": "08.01.2018 13:38:08",
            "Дата платежа": "10.01.2018",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -1004.9,
            "Валюта операции": "RUB",
            "Сумма платежа": -1004.9,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Различные товары",
            "MCC": 5311.0,
            "Описание": "Torgovyy Dom Mayak",
            "Бонусы (включая кэшбэк)": 20,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 1004.9
        },
        {
            "Дата операции": "05.01.2018 15:28:22",
            "Дата платежа": "07.01.2018",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -79.6,
            "Валюта операции": "RUB",
            "Сумма платежа": -79.6,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Супермаркеты",
            "MCC": 5411.0,
            "Описание": "Пятёрочка",
            "Бонусы (включая кэшбэк)": 1,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 79.6
        },
        {
            "Дата операции": "05.01.2018 14:58:38",
            "Дата платежа": "07.01.2018",
            "Номер карты": "*7197",
            "Статус": "OK",
            "Сумма операции": -120.0,
            "Валюта операции": "RUB",
            "Сумма платежа": -120.0,
            "Валюта платежа": "RUB",
            "Кэшбэк": None,
            "Категория": "Цветы",
            "MCC": 5992.0,
            "Описание": "Magazin  Prestizh",
            "Бонусы (включая кэшбэк)": 2,
            "Округление на инвесткопилку": 0,
            "Сумма операции с округлением": 120.0
        }
    ]
    return transactions


@pytest.fixture
def json_transactions():
    return get_data()

@pytest.fixture
def df_transaction():
    return pandas.DataFrame(get_data())

@pytest.fixture
def get_data_1():
    return get_data()


@pytest.fixture
def get_period_time():
    result = ["01.01.2018 15:28:22", "06.01.2018 15:28:22"]
    return result

if __name__ == "__main__":
    print(get_data)